version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.7.0
  aws-ecs: circleci/aws-ecs@1.1.0
workflows:
  # Nginxのデプロイ
  nginx-deploy:
    jobs:
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          region: AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          dockerfile: ./docker/nginx/Dockerfile
          repo: nginx
          tag: '${CIRCLE_SHA1}'
          filters:
            branches:
              only: master
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          family: 'nginx-rails-app' # ECSのタスク定義名
          cluster-name: 'Rails-Nginx' #ECSのクラスターのARN
          service-name: 'ecs-rails-ervice' #サービス名
          container-image-name-updates: 'container=nginx,tag=${CIRCLE_SHA1}'
  # Railsのデプロイ
  rails-deploy:
    jobs:
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          region: AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          dockerfile: ./docker/rails/Dockerfile
          repo: rails-portfolio
          tag: '${CIRCLE_SHA1}'
          filters:
            branches:
              only: master
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          family: 'nginx-rails-app' # ECSのタスク定義名
          cluster-name: 'Rails-Nginx' #ECSのクラスターのARN
          service-name: 'ecs-rails-ervice' #サービス名
          container-image-name-updates: 'container=rails,tag=${CIRCLE_SHA1}'
  test:
    jobs:
      build:
      # docker-composeがインストール済みの仮想マシンをプル
      machine:
        image: circleci/classic:edge
      steps:
        - checkout
        - run:
            name: database.ymlの再設定
            command: |
              rm ./config/database.yml
              mv ./config/database.ci.yml ./config/database.yml
        - run:
            name: Dockerコンテナのビルド
            command: docker-compose build
        - run:
            name: Dockerコンテナの起動
            command: docker-compose up -d
        - run:
            name: データベースのセットアップ
            command: docker-compose exec web bundle exec rails db:create db:migrate RAILS_ENV=test
        - run:
            name: RSpecテスト実行
            command: docker-compose exec web bundle exec bin/rspec
        - run:
            name: Dockerコンテナの停止
            command: docker-compose down
